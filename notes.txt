public private protected default 
package 
final,static 


inheritance 
abstraction
interface
exception


thread
jdbc 
collections 


-----------------------------------------------------------

firstName , rollNum 


scope:-	
	instance variable ---> per instance copy --> n object -> n copy 
	static variable   ---> class variable -- access using class name -- all objects are shared this  
	local variable    ---> 

access specifier :- 	
public 
private
protected 
default* 


	A - private add, default sub,protected mul,public div
	
	private -- within the class 
	default -- class -- outside the class -- not outside the package   
	protected - "" ------ "" ---------------- outside the package but relation [ inheritance ] 
	public  -- "" ------ "" ------------------- outside the package no need of inheritance


							private			default			protected			public 
same class					Y				Y				Y					Y
same package,non subclass	N				Y				Y					Y	
diff pacakage,non subclass  N				N				N					Y 
diff pacakte,sub class		N				N				Y					Y 

		
-----------------------------------------------------------
constructor:-	
		its a special method which has same name as class name. 
		it must not have any return type.
		constructor is used to init. instance variable.
		
		1) implicit - default [ no argument ]
		2) explicit 
				2.1 - default - no argument 
				2.2 - argument - parameterized 
		it will call automatically when we create instance.



-----------------------------------------------------------
inheritance:-	

	overloading 
	overriding 
	
-----------------------------------------------------------------
collections :- 

	1) collection - topic 
	2) Collections - class 
	3) Collection - interface 
	
	
	
	
	
	       Collection(I) ---non primitive 	
List(I) 		Queue(I)			Set(I)	 			*Map(I) 
ArrayList	  PriorityQueue 		HashSet				HashMap
Vector							    TreeSet				TreeMap 


unique
duplicate
ordered
unordered
sorted
unsorted 

-----------------------------------------------------------------

ArrayList -- duplicate - ordered [  non-synchronized ] [ all at once ] 
Vector  --   duplicate - ordered  [ synchronized ]     [ turn by turn ] 


-------------------------------------------------------------------------

ContactApp:-> 
	
	contact --> 
		name 
		contactNum 
		city 
		
	
	Add Contact 
	List Contacts 































